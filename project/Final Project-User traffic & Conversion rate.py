# -*- coding: utf-8 -*-
"""Final Project-code.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yFS4p_CvSxKeA7DcdHAw-798uTxkevSO
"""

#from google.colab import drive
#drive.mount('/content/drive')
import sys
#!pip install pyspark
from pyspark import SparkContext
from pyspark.sql import SparkSession
sc = SparkContext.getOrCreate()
spark = SparkSession.builder.getOrCreate()

#data = spark.read.option("header", True).csv("/content/drive/My Drive/UserBehaviorSmall.csv.bz2")
data = spark.read.option("header", True).csv(sys.argv[1])

#data.take(5)

datardd = data.rdd
#datardd.top(2)

"""User traffic and shopping states"""

pvSum = datardd.map(lambda x:x[3])
uvSum = datardd.mapValues(lambda x:(1)).reduceByKey(lambda x,y:(x+y))
print("Total number of visits: "+str(pvSum.countByValue()['pv']))
print("Total number of users: "+str(uvSum.count()))

dailypv = data.groupBy('date','behaviorType').count()
dailypvgraph = dailypv.filter(dailypv.behaviorType == 'pv')
dailyuv = data.groupBy('date','userId').count()
dailyuvcount = dailyuv.groupBy('date').count()
dailyuvgraph = dailyuvcount.toPandas().sort_values(by=['date'])
dailypvgraphP = dailypvgraph.toPandas().sort_values(by=['date'])
print(dailyuvgraph)
print(dailypvgraphP)

import matplotlib.pyplot as plt
plt.rcParams["figure.figsize"] = (10,5)
ax = dailypvgraphP.plot(x='date',y='count',kind='line')
dailyuvgraph.plot(x='date',y='count',kind='line',ax=ax)
plt.show()

repuser = data.filter(data.behaviorType == 'buy')
repuserT = repuser.groupBy('userId').count()
repuserT1 = repuserT.filter('count>1')
repusercount = repuserT1.count()
userpurchasecount = data.groupBy('userId').count()
usercount = userpurchasecount.count()
print('Repeat User Rate: '+str(round(repusercount/usercount*100,5))+'%')

"""User behavior conversion rate"""

userclick = data.filter(data.behaviorType == 'pv').count()
userfav = data.filter(data.behaviorType == 'fav').count()
usercart = data.filter(data.behaviorType == 'cart').count()
userbuy = repuser.count()
favandcart = userfav+usercart

cfrate = round(favandcart/userclick,5)
fbrate = round(userbuy/favandcart,5)
cbrate = round(userbuy/userclick,5)
print('Click to favorite or add-to-cart conversion rate: '+str(cfrate*100)+'%')
print('Favorite or add-to-cart to buy conversion rate: '+str(fbrate*100)+'%')
print('Click to buy conversion rate: '+str(cbrate*100)+'%')

#import plotly.express as px
#plotdata = dict(
#    number=[100,round(cfrate*100,3),round(fbrate*cfrate*100,3)],
#    stage=["Page Visit", "Fav&Cart", "Buy"])
#fig = px.funnel(plotdata, x='number', y='stage')
#fig.show()